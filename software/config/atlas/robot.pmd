group "00.params_and_model_pub" {
    cmd "pserver" {
        exec = "bot-param-server $DRC_BASE/software/config/atlas/robot.cfg";
        host = "atlas2";
    }

    cmd "model_LR_RR" {
        exec = "robot_model_publisher $DRC_BASE/software/models/atlas_v5/model_LR_RR.urdf";
        host = "atlas2";
    }

}

group "01.state_mit" {

    cmd "joints2frames" {
        exec = "drc-joints2frames";
        host = "atlas2";
    }

    cmd "state-sync" {
        exec = "drc-state-sync-atlas -a5";
        host = "atlas2";
    }
    cmd "fusion" {
        exec = "se-fusion -v";
        host = "atlas2";
    }
    cmd "yaw-lock" {
        exec = "se-yaw-lock -yd";
        host = "atlas2";
    }
    cmd "contact-passthrough" {
        exec = "drc-controller-contact-passthrough";
        host = "atlas2";
    }
}


group "02.plan_and_control" {

    cmd "EncoderCalibration" {
        exec = "matlab -nosplash -nodesktop -r \"addpath_control; calibrateAtlasArmEncoders(true);\"";
        host = "atlas2";
        stop_signal = 15;
    }

    cmd "ContactMonitor" {
    	exec = "drc-contact-monitor";
        host = "atlas2";
    }

    cmd "FallDetector" {
      exec = "drc-atlas-fall-detector";
      host = "atlas2";
    }

    cmd "BasePlanner" {
       exec = "matlab -nosplash -nodesktop -r \"addpath_control; p = BasePlanner(); p.run();\"";
       host = "base";
       stop_signal = 15;
    }

    cmd "RemotePlanner" {
       exec = "bash -c 'LCM_DEFAULT_URL=${LCM_URL_DRC_ATLAS_1_2} matlab -nosplash -nodesktop -r \"addpath_control; p = RemotePlanner(); p.run();\"'";
       host = "atlas1";
       stop_signal = 15;
    }

    cmd "PlanEval" {
        exec = "matlab -nosplash -nodesktop -r \"addpath(fullfile(getenv('DRC_BASE'),'software','build','matlab')); addpath_control; runDRCPlanEval(0, struct('hands', 'robotiq_weight_only')); \"";
        host = "atlas2";
        stop_signal = 15;
    }

    cmd "InstQP" {
        exec = "runDRCInstQP -u ${DRC_BASE}/software/drake/drake/examples/Atlas/urdf/atlas_minimal_contact.urdf -c ${DRC_BASE}/software/drake/drake/examples/Atlas/config/control_config_hardware.yaml -um ${DRC_BASE}/software/drake/drake/examples/Atlas/config/urdf_modifications_robotiq_weight.yaml -lc ATLAS_COMMAND -lb ATLAS_BEHAVIOR_COMMAND";
        host = "atlas2";
        stop_signal = 15;
    }

    cmd "PressureControl" {
        exec = "bash -c 'LCM_DEFAULT_URL=${LCM_URL_DRC_ATLAS_1_2} drc-atlas-pressure-monitor'";
        host = "atlas1";
    }

}

group "04.perception_drivers" {

    cmd "multisense" {
        exec = "multisense-lcm-driver -o 0 -n hokuyo_joint";
        host = "atlas0";
    }

    cmd "spin-lidar" {
        exec = "drc-spin-lidar";
        host = "atlas0";
    }

}


group "05.maps" {

    cmd "data-request-server" {
        exec = "data-request-server";
        host = "atlas0";
    }

    cmd "maps-server" {
        exec = "maps-server -p 0.25";
        host = "atlas0";
    }

    cmd "lidar-passthrough" {
        exec = "bash -c 'ROS_PACKAGE_PATH=${DRC_BASE}/software/models:${DRC_BASE}/software/models/common_components:${ROS_PACKAGE_PATH} drc-lidar-passthrough -c 0.06'";
        host = "atlas0";
    }

    cmd "block fitter" {
        exec = "drc-block-fitter -c -t BLOCK_FIT_TRIGGER";
        host = "base";
    }
}

group "06.hands_robotiq" {

    cmd "robotiq-left" {
        exec = "bash -c 'LCM_DEFAULT_URL=${LCM_URL_DRC_ATLAS_1_2} robotiq_tcp_node LEFT 192.168.120.101'";
        host = "atlas2";
    }

    cmd "robotiq-right" {
        exec = "bash -c 'LCM_DEFAULT_URL=${LCM_URL_DRC_ATLAS_1_2} robotiq_tcp_node RIGHT 192.168.121.101'";
        host = "atlas2";
    }

}

group "07.SA_cameras" {

    cmd "sa-left" {
        exec = "ptgrey-gige -t -f 2 -q 50 -c CAMERACHEST_LEFT -s 12491351 -r 270 --equalize 400";
        host = "atlas1";
    }

    cmd "sa-right" {
        exec = "ptgrey-gige -t -f 2 -q 50 -c CAMERACHEST_RIGHT -s 12502227 -r 90 --equalize 400";
        host = "atlas1";
    }
}

group "08.logging" {
    cmd "atlas logger" {
        exec = "lcm-logger  --rotate=30 --split-mb=1000 -s /home/user/logs/rolling/log_split";
        host = "atlas2";
    }
}

group "09.BDI_walking" {
    cmd "RobotBDIStepTranslator" {
        exec = "drc-bdi-step-translator";
        host = "atlas2";
    }

    cmd "BDIStepPlotter" {
        exec = "drc-bdi-step-translator -b";
        host = "base";
    }
}

group "10.Driving" {
    cmd "Streaming Robot Side" {
        exec = "DISPLAY=:0 directorPython $DRC_BASE/software/director/src/python/tests/testAtlasCommand.py --robot";
        host = "atlas2";
    }

    cmd "Streaming Robot Side with Driving Gains" {
        exec = "DISPLAY=:0 directorPython $DRC_BASE/software/director/src/python/tests/testAtlasCommand.py --robotDrivingGains";
        host = "atlas2";
    }

    cmd "Streaming Base Side" {
        exec = "directorPython $DRC_BASE/software/director/src/python/tests/testAtlasCommand.py --base";
        host = "base";
    }

    cmd "Throttle Driver" {
        exec = "directorPython $DRC_BASE/software/director/src/python/director/triggerfinger.py THROTTLE_COMMAND ";
        host = "base";
    }

    cmd "Steering Driver" {
        exec = "$DRC_BASE/software/control/pod-build/bin/SteeringCommandDriver /dev/input/js0 STEERING_COMMAND";
        host = "base";
    }

    cmd "sa-right-high-rate" {
        exec = "ptgrey-gige -t -f 20 -q 50 -c CAMERACHEST_RIGHT -s 12502227 -r 180 --equalize 400";
        host = "atlas1";
    }

}

group "11.Video" {
    cmd "Camera Viewer" {
        exec = "directorPython $DRC_BASE/software/director/src/python/scripts/cameraViewer.py";
        host = "base";
    }

    cmd "video encode" {
        exec = "drc-video-encode -k 60 -c CAMERA -o CAMERA_LEFT_STREAM";
        host = "atlas0";
    }

    cmd "video decode" {
        exec = "drc-video-decode -c CAMERA_LEFT -i CAMERA_LEFT_STREAM -o CAMERA_LEFT_DECODED";
        host = "base";
    }
}

cmd "atlas-off" {
    exec = "drc-atlas -p off";
    host = "atlas2";
}

cmd "atlas-high" {
    exec = "drc-atlas -p on";
    host = "atlas2";
}

cmd "pose-util" {
    exec = "drc-robot-pose-util";
    host = "base";
}

cmd "atlas control panel" {
    exec = "directorPython $DRC_BASE/software/director/src/python/scripts/atlasControlPanel.py";
    host = "base";
}

cmd "viewer" {
    exec = "drc-viewer -c atlas/robot.cfg";
    host = "base";
}


cmd "base_deputy" {
    exec = "bot-procman-deputy -n base";
    host = "localhost";
}

cmd "April Tags" {
    exec = "drc-car-tags --threads=12  --window=true --quiet";
    host = "base";
}

script "0.prep" {
    start cmd "base_deputy";
    wait ms 1000;
    start group "00.params_and_model_pub";
    wait ms 1000;
    start group "01.state_mit";
    start group "02.plan_and_control";
    start group "04.perception_drivers";
    start group "05.maps";
    start group "07.SA_cameras";
    start group "08.logging";
    start cmd "atlas control panel";

    start cmd "atlas-off";
}

script "1.power_on" {
    stop cmd "atlas-off";
    wait ms 2000;
    start cmd "atlas-high";
    start group "06.hands_robotiq";
}

script "2.stop_clean" {
    stop cmd "atlas-off";
    stop cmd "atlas-high";
    stop cmd "PlanEval";
    stop cmd "InstQP";
    stop cmd "fusion";
    stop cmd "state-sync";
    stop group "10.Driving";
    wait ms 2000;
    start cmd "atlas-off";
    start cmd "state-sync";
    start cmd "fusion";
    start cmd "PlanEval";
    start cmd "InstQP";
    start cmd "PressureControl";

}


script "3.Start Streaming" {
    stop cmd "PlanEval";
    stop cmd "PressureControl";
    stop cmd "sa-right";
    start cmd "April Tags";
    start cmd "Streaming Robot Side with Driving Gains";
    start cmd "sa-right-high-rate";
}

script "4.Stop Streaming" {
    stop group "10.Driving";
    start cmd "PlanEval";
    stop group "01.state_mit";
    wait ms 2000;
    start group "01.state_mit";
    start cmd "PressureControl";
    start cmd "sa-right";
}
